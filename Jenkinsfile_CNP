#!groovy

properties([
    [
        $class       : 'GithubProjectProperty',
        displayName  : 'Approve Organisations app',
        projectUrlStr: 'https://github.com/hmcts/rpx-xui-approve-org'
    ],
    pipelineTriggers([
        [$class: 'GitHubPushTrigger']
    ])
])

@Library("Infrastructure")

import uk.gov.hmcts.contino.AppPipelineDsl
import uk.gov.hmcts.contino.azure.KeyVault
import uk.gov.hmcts.contino.Environment

def type      = "nodejs"
def product   = "xui"
def component = "ao-webapp"
def vault = "rpx"
def channel   = '#xui-pipeline'

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

def branchesToSync = ['demo', 'perftest', 'ithc']

def secrets = [
  'rpx-${env}': [
    secret('ao-test-email', 'TEST_EMAIL'),
    secret('ao-test-password', 'TEST_PASSWORD'),
    secret('test-api-email-adminuser', 'TEST_API_EMAIL_ADMIN'),
    secret('test-api-password-adminuser', 'TEST_API_PASSWORD_ADMIN'),
    secret('appinsights-instrumentationkey-ao', 'APPINSIGHTS_INSTRUMENTATIONKEY'),
    secret('ao-s2s-client-secret', 'S2S_SECRET'),
    secret('ao-idam-client-secret', 'IDAM_SECRET'),
    secret('launch-darkly-client-id', 'LAUNCH_DARKLY_CLIENT_ID'),
    secret('ao-webapp-redis6-connection-string', 'REDISCLOUD_URL'),
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

withPipeline(type, product, component) {
    enableSlackNotifications(channel)
    loadVaultSecrets(secrets)
    enableAksStagingDeployment()
    disableLegacyDeployment()
    syncBranchesWithMaster(branchesToSync)


    enablePactAs([
      AppPipelineDsl.PactRoles.CONSUMER,
    ])

    afterSuccess('build') {
        yarnBuilder.yarn('build')
    }

    afterSuccess('test') {

        publishHTML ( [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/coverage/node",
            reportFiles          : "index.html",
            reportName           : "node coverage tests"
        ])

        publishHTML ( [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/coverage/ng",
            reportFiles          : "index.html",
            reportName           : "ng coverage tests"
        ])

        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/mutation/node/",
            reportFiles          : 'index.html',
            reportName           : 'XUI Approve Organisation Mutation tests'
        ])

        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/a11y/",
            reportFiles          : 'Report.html',
            reportName           : 'Approve Org a11y Test Report'
        ])

    }

    afterSuccess('smoketest:demo') {
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/smoke/",
            reportFiles          : 'index.html',
            reportName           : 'DEMO Smoke Test'
        ])
    }

    afterSuccess('smoketest:preview') {
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/smoke/",
            reportFiles          : 'index.html',
            reportName           : 'PREVIEW Smoke Test'
        ])
    }

    afterSuccess('functionalTest:preview') {

      publishHTML([
        allowMissing         : true,
        alwaysLinkToLastBuild: true,
        keepAll              : true,
        reportDir            : "reports/tests/api_functional/",
        reportFiles          : 'mochawesome.html',
        reportName           : 'PREVIEW API Functional Test'
      ])

        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/functional/",
            reportFiles          : 'index.html',
            reportName           : 'PREVIEW Functional Test'
        ])

        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/ngIntegration/",
            reportFiles          : 'index.html',
            reportName           : 'PREVIEW NG Integration Test'
        ])
    }


    afterSuccess('smoketest:aat') {
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/smoke/",
            reportFiles          : 'index.html',
            reportName           : 'AAT Smoke Test'
        ])
    }


    afterSuccess('functionalTest:aat') {

      publishHTML([
        allowMissing         : true,
        alwaysLinkToLastBuild: true,
        keepAll              : true,
        reportDir            : "reports/tests/api_functional/",
        reportFiles          : 'mochawesome.html',
        reportName           : 'AAT API Functional Test'
      ])

      publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/functional/",
            reportFiles          : 'index.html',
            reportName           : 'AAT Functional Test'
        ])

        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/ngIntegration/",
            reportFiles          : 'index.html',
            reportName           : 'AAt NG Integration Test'
        ])
    }
}
